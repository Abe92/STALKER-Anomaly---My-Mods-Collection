--[[
	Modified by Faustle (2018)
]]--

local strong_monster = { 'boar', 'chimera', 'gigant' }
local knifes = { 
					wpn_knife = 0.04,
					wpn_knife2 = 0.03,
					wpn_knife3 = 0.02,
					wpn_knife4 = 0.015,
					wpn_knife5 = 0.01,
					wpn_axe = 0.01,
					wpn_axe2 = 0.01,
					wpn_axe3 = 0.01,
				 }
local knifesm = { 
					"wpn_knife3",
					"wpn_knife4",
					"wpn_knife5",
					"wpn_axe",
					"wpn_axe2",
					"wpn_axe3",
					"wpn_knife",
					"wpn_knife2",
				 }

--// Функция проверки наличия ножа или топора в руках
function is_equipped()
	if (db.actor) then
		for knind = 1, 8 do
			local obj = db.actor:object(knifesm[knind])	
			if obj ~= nil then
				local s_obj = obj:section()
				return knifes[s_obj]
			end
		end	
	end
	return false
end

--// Функция получения состояние текущего оружия
function get_condition()
	local cond = 1
	if (is_equipped()) then
		for knind = 1, 8 do
			local obj = db.actor:object(knifesm[knind])	
			if obj ~= nil then
			return obj:condition()
			end
		end	
	end
end

--// Функция проверки возможности лута монстра
function can_loot(monster)
	if not (monster) then
		return
	end
	if (db.actor) then
		for knind = 1, 8 do
			local obj = db.actor:object(knifesm[knind])	
			if obj ~= nil then		
				local wpn = obj:section()
	
				for _,k in ipairs(strong_monster) do
					if monster:match(k) then
						if wpn:match('wpn_knife$') or wpn:match('wpn_knife2$') then
							return false
						else 
						return true
						end
					else 
					return true
					end
				end
			end
		end
	end
	return true
end

--// Функция уменьшения состояния для ножа\топора
function degradate()
		local num = 0
		for knind = 1, 8 do
			local obj = db.actor:object(knifesm[knind])	
			if obj ~= nil then
				local cond = obj:condition()
				local wpn = obj:section()

				if knifes[wpn] then
					num = knifes[wpn]
				end

				if (cond > num) then 
					obj:set_condition(cond-num/4) 
				else
					obj:set_condition(0.01)
				end
			else
				return
			end
		end
end

--// Является ли оружие в руках топором
function is_axe()
		for knind = 1, 8 do
			local obj = db.actor:object(knifesm[knind])	
			if obj ~= nil then
				local wpn = db.actor:object('wpn_knife')
				if wpn then
					if wpn:section():match('axe') then
						return true
					end
				end
			end
		end
end